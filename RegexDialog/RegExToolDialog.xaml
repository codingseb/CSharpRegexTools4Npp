<Window x:Class="RegexDialog.RegExToolDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:RegexDialog"
        xmlns:converters="clr-namespace:RegexDialog.Converters"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:behaviors="clr-namespace:RegexDialog.Behaviors"
        Title="C# Regex Tools" 
        Height="422.75" 
        MinHeight="300"
        MinWidth="600"
        Width="1427.97" 
        WindowStyle="ToolWindow"
        Closing="Window_Closing"
        Loaded="Root_Loaded"
        SizeChanged="Root_SizeChanged"
        LocationChanged="Root_LocationChanged"
        PreviewKeyDown="Root_PreviewKeyDown"
        DataContext="{x:Static local:Config.Instance}"
        x:Name="Root">
    <Window.Resources>
        <BitmapImage x:Key="NewPicture" UriSource="Resources/page_white.png" />
        <BitmapImage x:Key="OpenPicture" UriSource="Resources/folder_page.png" />
        <BitmapImage x:Key="SavePicture" UriSource="Resources/diskette.png" />
        <BitmapImage x:Key="ExitPicture" UriSource="Resources/door_in.png" />
        <BitmapImage x:Key="MatchPicture" UriSource="Resources/accept_button.png" />
        <BitmapImage x:Key="IsMatchPicture" UriSource="Resources/emotion_question.png" />
        <BitmapImage x:Key="ReplacePicture" UriSource="Resources/text_replace.png" />
        <BitmapImage x:Key="SelectPicture" UriSource="Resources/select.png" />
        <BitmapImage x:Key="ExtractPicture" UriSource="Resources/table_export.png" />
        <BitmapImage x:Key="GroupOKPicture" UriSource="Resources/bullet_code.png" />
        <BitmapImage x:Key="GroupNOKPicture" UriSource="Resources/bullet_code_red.png" />
        <BitmapImage x:Key="CapturePicture" UriSource="Resources/textfield_rename.png" />
        <BitmapImage x:Key="RegexLanguageElementsGroupPicture" UriSource="Resources/folder_page.png" />
        <BitmapImage x:Key="RegexLanguageElementPicture" UriSource="Resources/page_go.png" />
        <BitmapImage x:Key="DownArrow" UriSource="Resources/bullet_arrow_down.png"/>
        <BitmapImage x:Key="ShowLinesNumbers" UriSource="Resources/line_numbers.png"/>
        <BitmapImage x:Key="ShowSpaces" UriSource="Resources/space.png"/>
        <BitmapImage x:Key="ShowReturns" UriSource="Resources/return.png"/>
        <BitmapImage x:Key="Play" UriSource="Resources/control_play_blue.png"/>
        <BitmapImage x:Key="VS" UriSource="Resources/visual_studio_purple.png"/>

        <Style TargetType="Image">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=Control}}" Value="True">
                    <Setter Property="Opacity" Value="1" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=Control}}" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
    </Window.Resources>
    <DockPanel Background="WhiteSmoke" >
        <Menu DockPanel.Dock="Top" BorderBrush="Silver" BorderThickness="0,0,0,1">
            <MenuItem Header="_File" >
                <MenuItem Header="_New" Click="New_MenuItem_Click" >
                    <MenuItem.Icon>
                        <Image Source="{StaticResource NewPicture}" />
                    </MenuItem.Icon>        
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Open" Click="Open_MenuItem_Click">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource OpenPicture}" />    
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save _As..." Click="Save_as_MenuItem_Click" >
                    <MenuItem.Icon>
                        <Image Source="{StaticResource SavePicture}" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Export To Visual Studio _Solution..." Click="ExportToVisualStudio_Click">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource VS}"  />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="_Exit" Click="Exit_MenuItem_Click" >
                    <MenuItem.Icon>
                        <Image Source="{StaticResource ExitPicture}" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Actions" >
                <MenuItem Header="_Is Match ?" Click="IsMatchButton_Click">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource IsMatchPicture}" Width="16" Height="16" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Matches" Click="ShowMatchesButton_Click">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource MatchPicture}" Width="16" Height="16" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Select All Matches" Click="SelectAllButton_Click" IsEnabled="{Binding TextSourceOn, Converter={converters:EnumBooleanConverter InverseBool=True}, ConverterParameter='Directory'}">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource SelectPicture}" 
                               Width="16" 
                               Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Extract All Matches" Click="ExtractMatchesButton_Click">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource ExtractPicture}" Width="16" Height="16" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Replace All" Click="ReplaceAllButton_Click">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource ReplacePicture}" Width="16" Height="16" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Parameters">
                <MenuItem Name="miRegexOptions" Header="_Regex Options" >
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding Name}" />
                            <Setter Property="IsChecked" Value="{Binding Selected}" />
                            <EventSetter Event="Click" Handler="MiRegexOption_Click" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <MenuItem Header="Auto _Indentation Options">
                    <MenuItem Name="miAutoIndentOptionCharClasses" 
                              Header="Chars _classes [] on one line" 
                              IsCheckable="True"
                              IsChecked="{Binding AutoIndentCharClassesOnOneLine}" />
                    <MenuItem Name="miAutoIndentOptionKeepQuantifiersonSameLine" 
                              Header="Keep _quantifiers on same line"
                              IsCheckable="True"
                              IsChecked="{Binding AutoIndentKeepQuantifiersOnSameLine}" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_History" >
                <MenuItem Header="Put C# Regex In History" Click="PutInRegexHistory_Click" />
                <MenuItem Header="Put Replace In History" Click="PutInReplaceHistory_Click" />
                <Separator />
                <MenuItem Header="Clear C# Regex History" Click="ClearRegexHistory_Click" />
                <MenuItem Header="Clear Replace History" Click="ClearReplaceHistory_Click" />
                <MenuItem Header="Clear Directory History" Click="ClearDirectoryHistory_Click" />
                <MenuItem Header="Clear Directory Filter History" Click="ClearDirectoryFilterHistory_Click" />
            </MenuItem>
        </Menu>
        <Border DockPanel.Dock="Top">
            <WrapPanel >
                <WrapPanel.Resources>
                    <Style BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button" />
                    <Style BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" TargetType="ToggleButton" />
                </WrapPanel.Resources>
                <Button x:Name="IsMatchButton" Click="IsMatchButton_Click" >
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource IsMatchPicture}" Width="16" Height="16" ToolTip="Is Match ?"/>
                    </StackPanel>
                </Button>
                <Button x:Name="ShowMatchesButton" Click="ShowMatchesButton_Click" >
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource MatchPicture}" 
                               Width="16" 
                               Height="16" 
                               ToolTip="Matches"
                               />
                    </StackPanel>
                </Button>
                <Button x:Name="SelectAllButton" Click="SelectAllButton_Click" IsEnabled="{Binding TextSourceOn, Converter={converters:ExpressionEvalConverter Expression='binding == RegexTextSource.CurrentTab || binding == RegexTextSource.CurrentSelection'}}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource SelectPicture}" 
                               Width="16" 
                               Height="16" 
                               ToolTip="Select All Matches"/>
                    </StackPanel>
                </Button>
                <Button x:Name="ExtractMatchesButton" Click="ExtractMatchesButton_Click">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource ExtractPicture}" Width="16" Height="16" ToolTip="Extract All Matches"/>
                    </StackPanel>
                </Button>
                <Button x:Name="ReplaceAllButton" Click="ReplaceAllButton_Click">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource ReplacePicture}" Width="16" Height="16" ToolTip="Replace All"/>
                    </StackPanel>
                </Button>
                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                <ToggleButton x:Name="ToggleShowLinesNumberInRegexButton" 
                              IsChecked="{Binding ShowLinesNumbersRegexEditorOption}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource ShowLinesNumbers}" Width="16" Height="16" ToolTip="Show/Hide lines numbers in C# Regex Field"/>
                    </StackPanel>
                </ToggleButton>
                <ToggleButton x:Name="ToggleShowSpacesInRegexButton" 
                              IsChecked="{Binding ShowSpaceCharsRegexEditorOption}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource ShowSpaces}" Width="16" Height="16" ToolTip="Show/Hide Spaces and tabulations in C# Regex Field" />
                    </StackPanel>
                </ToggleButton>
                <ToggleButton x:Name="ToggleShowReturnsInRegexButton" 
                              IsChecked="{Binding ShowEndOfLinesRegexEditorOption}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource ShowReturns}" Width="16" Height="16" ToolTip="Show/Hide end of lines in C# Regex Field" />
                    </StackPanel>
                </ToggleButton>
                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                <ToggleButton x:Name="ToggleShowLinesNumberInReplaceButton" 
                              IsChecked="{Binding ShowLinesNumbersReplaceEditorOption}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource ShowLinesNumbers}" Width="16" Height="16" ToolTip="Show/Hide lines numbers in Replace Field"/>
                    </StackPanel>
                </ToggleButton>
                <ToggleButton x:Name="ToggleShowSpacesInReplaceButton" 
                              IsChecked="{Binding ShowSpaceCharsReplaceEditorOption}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource ShowSpaces}" Width="16" Height="16" ToolTip="Show/Hide Spaces and tabulations in Replace Field" />
                    </StackPanel>
                </ToggleButton>
                <ToggleButton x:Name="ToggleShowReturnsInReplaceButton" 
                             IsChecked="{Binding ShowEndOfLinesReplaceEditorOption}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource ShowReturns}" Width="16" Height="16" ToolTip="Show/Hide end of lines in Replace Field" />
                    </StackPanel>
                </ToggleButton>
            </WrapPanel>
        </Border>
        <Grid Margin="0,5,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="FirstColumn"  />
                <ColumnDefinition Width="5" />
                <ColumnDefinition x:Name="SecondColumn"  />
                <ColumnDefinition Width="5" />
                <ColumnDefinition x:Name="ThirdColumn"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="RegexEditorRow" Height="*" />
                    <RowDefinition Height="5" />
                    <RowDefinition x:Name="ReplaceEditorRow" Height="*"  />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <Label Name="RegexEditorLabel" Target="{Binding ElementName=RegexEditor}" >C# _Regex</Label>
                        <Button Name="RegexHistoryButton" Margin="0,2" Click="RegexHistoryButton_Click">
                            <Image Source="{StaticResource DownArrow}"/>
                        </Button>
                        <Popup Name="RegexHistoryPopup" 
                               PlacementTarget="{Binding ElementName=RegexHistoryButton}"
                               Placement="Left">
                            <ListBox Name="RegexHistoryListBox" 
                                     ItemsSource="{Binding RegexHistory}"
                                     Width="300" 
                                     Height="200"
                                     BorderBrush="Gray"
                                     BorderThickness="1"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                     LostFocus="RegexHistoryListBox_LostFocus"
                                     KeyDown="RegexHistoryListBox_KeyDown"
                                     MouseDoubleClick="RegexHistoryListBox_MouseDoubleClick">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={converters:ShowOnOneLineConverter}}" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Popup>
                    </StackPanel>
                    <Border Grid.Row="1" BorderBrush="Gray" BorderThickness="1">
                        <avalonEdit:TextEditor
                            Name="RegexEditor"
                            BorderBrush="Gray"
                            FontFamily="Consolas"
                            FontSize="12"
                            ScrollViewer.HorizontalScrollBarVisibility="Auto"
                            TextChanged="RegexEditor_TextChanged"
                            ShowLineNumbers="{Binding ShowLinesNumbersRegexEditorOption}">
                            <i:Interaction.Behaviors>
                                <behaviors:SimplePropertyBindingBehavior PropertyName="Options.ShowSpaces" Value="{Binding ShowSpaceCharsRegexEditorOption}" />
                                <behaviors:SimplePropertyBindingBehavior PropertyName="Options.ShowTabs" Value="{Binding ShowSpaceCharsRegexEditorOption}" />
                                <behaviors:SimplePropertyBindingBehavior PropertyName="Options.ShowEndOfLine" Value="{Binding ShowEndOfLinesRegexEditorOption}" />
                            </i:Interaction.Behaviors>
                            <avalonEdit:TextEditor.ContextMenu>
                                <ContextMenu Name="cmRegexfieldContextMenu">
                                    <MenuItem Name="cmiRegexIndent" Header="Auto Indent and set IgnorePatternWhitespace" Click="CmiRegexIndent_Click"/>
                                    <MenuItem Name="cmiRegexSetOnOneLine" Header="Set on one line" Click="CmiRegexSetOnOneLine_Click"/>
                                    <Separator />
                                    <MenuItem Header="Cut" Command="ApplicationCommands.Cut"/>
                                    <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
                                    <MenuItem Header="Paste" Command="ApplicationCommands.Paste"/>
                                    <Separator/>
                                    <MenuItem Name="cmiRegexCopyForOnOneLine" Header="Copy on one line" Click="CmiRegexCopyForOnOneLine_Click"/>
                                    <MenuItem Name="CmiRegexCopyForCSharpString" Header="Copy for C# string" Click="CmiRegexCopyForCSharpString_Click" />
                                    <MenuItem Name="cmiRegexCopyForXml" Header="Copy for XML" Click="CmiRegexCopyForXml_Click"/>
                                    <MenuItem Name="cmiRegexPasteFromXml" Header="Paste from XML" Click="CmiRegexPasteFromXml_Click"/>
                                    <Separator />
                                    <MenuItem Header="Select All" Command="ApplicationCommands.SelectAll"/>
                                </ContextMenu>
                            </avalonEdit:TextEditor.ContextMenu>
                        </avalonEdit:TextEditor>
                    </Border>
                </Grid>
                <GridSplitter
                    Grid.Row="1"
                    VerticalAlignment="Stretch" 
                    HorizontalAlignment="Stretch"/>
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <Label Target="{Binding ElementName=ReplaceEditor}">Re_place</Label>
                        <Button Name="ReplaceHistoryButton" Margin="0,2" Click="ReplaceHistoryButton_Click">
                            <Image Source="{StaticResource DownArrow}"/>
                        </Button>
                        <Popup Name="ReplaceHistoryPopup" 
                               PlacementTarget="{Binding ElementName=ReplaceHistoryButton}"
                               Placement="Left">
                            <ListBox Name="ReplaceHistoryListBox" 
                                     ItemsSource="{Binding ReplaceHistory}"
                                     Width="300" 
                                     Height="200"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                     LostFocus="ReplaceHistoryListBox_LostFocus"
                                     KeyDown="ReplaceHistoryListBox_KeyDown"
                                     MouseDoubleClick="ReplaceHistoryListBox_MouseDoubleClick">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={converters:ShowOnOneLineConverter}}" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Popup>
                        <CheckBox x:Name="CSharpReplaceCheckbox"
                                  Margin="5,0"
                                  IsChecked="{Binding CSharpReplaceMode}"
                                  Checked="CSharpReplaceCheckbox_IsChecked_Changed"
                                  Unchecked="CSharpReplaceCheckbox_IsChecked_Changed"
                                  VerticalAlignment="Center"
                                  Content="_C#"
                                  ToolTipService.ShowDuration="600000">
                            <CheckBox.ToolTip>
                                <StackPanel>
                                    <TextBlock>You must use at least one <Bold>return</Bold> keyword to return a string</TextBlock>
                                    <TextBlock>You can use the following variables :</TextBlock>
                                    <TextBlock>- <Bold>match</Bold> : Contains the current Regex Match</TextBlock>
                                    <TextBlock>- <Bold>matchIndex</Bold> : The index of the current match in the current file</TextBlock>
                                    <TextBlock>- <Bold>fileName</Bold> : (If in directory search) the fileName where the match was found</TextBlock>
                                    <TextBlock>- <Bold>globalIndex</Bold> : (If in directory search) the index of the match in all files</TextBlock>
                                    <TextBlock>- <Bold>fileIndex</Bold> : (If in directory search) the index of the file</TextBlock>
                                    <TextBlock Margin="0,5,0,0">You can add specific usings between <Bold>#usings</Bold> and <Bold>#usings</Bold></TextBlock>
                                    <TextBlock>You can declare shared variables, properties or methods putting code between <Bold>#global</Bold> and <Bold>#endglobal</Bold></TextBlock>
                                    <TextBlock>Between <Bold>#before</Bold> and <Bold>#endbefore</Bold> you get the <Bold>text</Bold> and the <Bold>fileName</Bold> before it is used as input of the regex by returning a string you can redefine it.</TextBlock>
                                    <TextBlock>Between <Bold>#after</Bold> and <Bold>#endafter</Bold> you get the <Bold>text</Bold> and the <Bold>fileName</Bold> after it is processed by the regex by returning a string you can modify it a last time.</TextBlock>
                                </StackPanel>
                            </CheckBox.ToolTip>
                        </CheckBox>
                    </StackPanel>
                    <Border Grid.Row="1" BorderBrush="Gray" BorderThickness="1" >
                        <avalonEdit:TextEditor
                            Name="ReplaceEditor"
                            FontFamily="Consolas"
                            FontSize="12"
                            ScrollViewer.HorizontalScrollBarVisibility="Auto" 
                            Margin="-1,-1,1,1"
                            ShowLineNumbers="{Binding ShowLinesNumbersReplaceEditorOption}">
                            <i:Interaction.Behaviors>
                                <behaviors:SimplePropertyBindingBehavior PropertyName="Text" Value="{Binding ReplaceEditorText}" PropertyChangedTriggerEventName="TextChanged" />
                                <behaviors:SimplePropertyBindingBehavior PropertyName="Options.ShowSpaces" Value="{Binding ShowSpaceCharsReplaceEditorOption}" />
                                <behaviors:SimplePropertyBindingBehavior PropertyName="Options.ShowTabs" Value="{Binding ShowSpaceCharsReplaceEditorOption}" />
                                <behaviors:SimplePropertyBindingBehavior PropertyName="Options.ShowEndOfLine" Value="{Binding ShowEndOfLinesReplaceEditorOption}" />
                            </i:Interaction.Behaviors>
                            <avalonEdit:TextEditor.ContextMenu>
                                <ContextMenu Name="cmReplacefieldContextMenu">
                                    <MenuItem Name="cmiReplaceGroupByNumber" Header="Groups by number" Visibility="{Binding CSharpReplaceMode, Converter={converters:CustomBoolToVisibilityConverter TrueValue=Collapsed, FalseValue=Visible}}">
                                        <MenuItem.Style>
                                            <Style TargetType="{x:Type MenuItem}">
                                                <EventSetter Event="Click" Handler="InsertInReplaceFromContextMenu_Click" />
                                            </Style>
                                        </MenuItem.Style>
                                    </MenuItem>
                                    <MenuItem Name="cmiReplaceGroupByName" Header="Groups by name" Visibility="{Binding CSharpReplaceMode, Converter={converters:CustomBoolToVisibilityConverter TrueValue=Collapsed, FalseValue=Visible}}">
                                        <MenuItem.Style>
                                            <Style TargetType="{x:Type MenuItem}">
                                                <EventSetter Event="Click" Handler="InsertInReplaceFromContextMenu_Click" />
                                            </Style>
                                        </MenuItem.Style>
                                    </MenuItem>
                                    <Separator Visibility="{Binding CSharpReplaceMode, Converter={converters:CustomBoolToVisibilityConverter TrueValue=Collapsed, FalseValue=Visible}}"/>
                                    <MenuItem Header="Cut" Command="ApplicationCommands.Cut"/>
                                    <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
                                    <MenuItem Header="Paste" Command="ApplicationCommands.Paste"/>
                                    <Separator />
                                    <MenuItem Name="CmiReplaceCopyForCSharpString" Header="Copy for C# string" Click="CmiReplaceCopyForCSharpString_Click" />
                                    <Separator />
                                    <MenuItem Header="Select All" Command="ApplicationCommands.SelectAll"/>
                                </ContextMenu>
                            </avalonEdit:TextEditor.ContextMenu>
                        </avalonEdit:TextEditor>
                    </Border>
                </Grid>
            </Grid>
            <GridSplitter Grid.Column="1"   
                          ResizeBehavior="PreviousAndNext"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"/>
            <DockPanel Grid.Column="2">
                <Label DockPanel.Dock="Top" Name="MatchesResultLabel" Target="{Binding ElementName=MatchResultsTreeView}" >Matches [Index,Length]</Label>
                <Button DockPanel.Dock="Bottom"
                        Content="Restore Last Search _Selection"
                        Visibility="{Binding TextSourceOn, Converter={converters:ChainingConverter Converter1={converters:EnumBooleanConverter}, Converter2={converters:CustomBoolToVisibilityConverter}, Converter1Parameter='CurrentSelection'}}"
                        Click="RestoreLastMachesSelectionButton_Click" />
                <Border Grid.Row="1" BorderBrush="Gray" BorderThickness="0">
                    <TreeView Name="MatchResultsTreeView"
                        VirtualizingPanel.IsVirtualizing="True"
                        SelectedItemChanged="MatchResultsTreeView_SelectedItemChanged"
                        PreviewMouseRightButtonDown="OnPreviewMouseRightButtonDown">
                        <TreeView.CommandBindings>
                            <CommandBinding Command="ApplicationCommands.Copy" 
                                            Executed="TreeViewCopy_CommandBinding_Executed"
                                            CanExecute="TreeViewCopy_CommandBinding_CanExecuted" />
                        </TreeView.CommandBindings>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="TreeViewItem">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, IsAsync=True}" />
                                <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                <EventSetter Event="MouseDown" Handler="TreeViewItem_MouseDown" />
                                <EventSetter Event="MouseDoubleClick" Handler="TreeViewItem_MouseDoubleClick" />
                                <EventSetter Event="KeyDown" Handler="TreeViewItem_KeyDown" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.Resources>
                            <ContextMenu x:Key="cmMatchResultsMenu">
                                <MenuItem Header="Show Matches Level" Click="ShowMatchesMenu_Click"/>
                                <MenuItem Header="Show Groups Level" Click="ShowGroupsMenu_Click"/>
                                <MenuItem Header="Show Captures Level" Click="ShowCapturesMenu_Click"/>
                            </ContextMenu>
                            <ContextMenu x:Key="cmMatchResultsItemMenu">
                                <MenuItem Header="Replace It" Click="ReplaceInEditor_MenuItem_Click" />
                                <Separator/>
                                <MenuItem Header="Insert value in Replace field" Click="InsertValueInReplaceField_MenuItem_Click"/>
                                <Separator/>
                                <MenuItem Header="Copy value" Command="ApplicationCommands.Copy" />
                                <Separator/>
                                <MenuItem Header="Show Matches Level" Click="ShowMatchesMenu_Click"/>
                                <MenuItem Header="Show Groups Level" Click="ShowGroupsMenu_Click"/>
                                <MenuItem Header="Show Captures Level" Click="ShowCapturesMenu_Click"/>
                            </ContextMenu>
                            <ContextMenu x:Key="cmMatchResultsGroupItemMenu">
                                <MenuItem Header="Replace It" Click="ReplaceInEditor_MenuItem_Click" />
                                <Separator/>
                                <MenuItem Header="Insert group by number in Replace field" Click="InsertGroupByNumberInReplaceField_MenuItem_Click"/>
                                <MenuItem Header="Insert group by name in Replace field" Click="InsertGroupByNameInReplaceField_MenuItem_Click"/>
                                <MenuItem Header="Insert value in Replace field" Click="InsertValueInReplaceField_MenuItem_Click"/>
                                <Separator/>
                                <MenuItem Header="Copy value" Command="ApplicationCommands.Copy" />
                                <Separator/>
                                <MenuItem Header="Show Matches Level" Click="ShowMatchesMenu_Click"/>
                                <MenuItem Header="Show Groups Level" Click="ShowGroupsMenu_Click"/>
                                <MenuItem Header="Show Captures Level" Click="ShowCapturesMenu_Click"/>
                            </ContextMenu>
                            <HierarchicalDataTemplate DataType="{x:Type local:RegexFileResult}" ItemsSource="{Binding Children}">
                                <StackPanel Background="Transparent" Orientation="Horizontal" ToolTip="{Binding FileName}">
                                    <TextBlock x:Name="FileTextBlock" Text="{Binding Name}"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type local:RegexMatchResult}" 
                                                      ItemsSource="{Binding Children}">
                                <StackPanel Background="Transparent" 
                                            Orientation="Horizontal" 
                                            ToolTip="{Binding Value}">
                                    <Image Source="{StaticResource MatchPicture}" Width="16" Height="16" Margin="3,0"/>
                                    <TextBlock Text="{Binding Name}"/>
                                    <TextBlock Text="{Binding OneLineValue}" Foreground="Blue"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type local:RegexGroupResult}" ItemsSource="{Binding Children}">
                                <StackPanel Background="Transparent" Orientation="Horizontal" ToolTip="{Binding Value}">
                                    <Image Width="16" Height="16" Margin="3,0">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}" >
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Success}" Value="True">
                                                        <Setter Property="Source" Value="{StaticResource GroupOKPicture}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Success}" Value="False">
                                                        <Setter Property="Source" Value="{StaticResource GroupNOKPicture}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <TextBlock Text="{Binding Name}" >
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}" >
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Success}" Value="False">
                                                        <Setter Property="Foreground" Value="Silver" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBlock Text="{Binding OneLineValue}" Foreground="Blue"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type local:RegexCaptureResult}" ItemsSource="{Binding Children}">
                                <StackPanel Background="Transparent" Orientation="Horizontal" ToolTip="{Binding Value}">
                                    <Image Source="{StaticResource CapturePicture}" Width="16" Height="16" Margin="3,0"/>
                                    <TextBlock Text="{Binding Name}"/>
                                    <TextBlock Text="{Binding OneLineValue}" Foreground="Blue"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                    </TreeView>
                </Border>
            </DockPanel>
            <GridSplitter Grid.Column="3" 
                          ResizeBehavior="PreviousAndNext"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"/>
            <TabControl
                Name="OptionTabControl"
                SelectedIndex="{Binding OptionTabControlSelectedTabItemIndex}"
                Grid.Column="4">
                <TabItem Name="RegexTabItem" Header="Regex _Language Elements" >
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RegexLanguageElementFirstRow" Height="*" MinHeight="50" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="0.1*" MinHeight="20"/>
                        </Grid.RowDefinitions>
                        <TreeView Name="RegexLanguagesElementsTreeView" 
                                  SelectedItemChanged="RegexLanguagesElementsTreeView_SelectedItemChanged">
                            <TreeView.Resources>
                                <HierarchicalDataTemplate DataType="{x:Type local:RegexLanguageElementGroup}" ItemsSource="{Binding Elements}">
                                    <StackPanel Background="Transparent" Orientation="Horizontal" ToolTip="{Binding Description}">
                                        <Image Source="{StaticResource RegexLanguageElementsGroupPicture}" Width="16" Height="16" Margin="3,0"/>
                                        <TextBlock Text="{Binding Name}"/>
                                        <TextBlock Text="{Binding Value}" Foreground="Blue"/>
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type local:RegexLanguageElement}">
                                    <StackPanel Background="Transparent" Orientation="Horizontal" ToolTip="{Binding Description}" MouseDown="RegexLanguageElement_StackPanel_MouseDown" MouseUp="RegexLanguageElement_StackPanel_MouseUp">
                                        <Image Source="{StaticResource RegexLanguageElementPicture}" Width="16" Height="16" Margin="3,0"/>
                                        <TextBlock Text="{Binding Name}"/>
                                        <TextBlock Text="{Binding Value}" Foreground="Blue"/>
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                            </TreeView.Resources>
                        </TreeView>
                        <GridSplitter 
                                Grid.Row="1"
                                VerticalAlignment="Stretch" 
                                HorizontalAlignment="Stretch"/>
                            <TextBox Name="tbxRegexLanguageElementDescription" 
                                     IsReadOnly="True"
                                     TextWrapping="Wrap"
                                     Grid.Row="2"
                                     Background="WhiteSmoke"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                    </Grid>
                </TabItem>
                <TabItem Name="ReplaceTabItem" Header="_Replace Elements" >
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="ReplaceLanguageElementFirstRow" Height="*" MinHeight="50" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="0.1*" MinHeight="20" />
                        </Grid.RowDefinitions>
                        <ListView Name="ReplaceLanguageElementsListView" SelectionChanged="ReplaceLanguageElementsListView_SelectionChanged">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" Background="Transparent" ToolTip="{Binding Description}" MouseDown="ReplaceLanguageElement_StackPanel_MouseDown" MouseUp="ReplaceLanguageElement_StackPanel_MouseUp">
                                        <Image Source="{StaticResource RegexLanguageElementPicture}" Width="16" Height="16" Margin="3,0"/>
                                        <TextBlock Text="{Binding Name}" />
                                        <TextBlock Text="{Binding Value}" Foreground="Blue"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <GridSplitter
                            Grid.Row="1"
                            VerticalAlignment="Stretch" 
                            HorizontalAlignment="Stretch"/>
                        <TextBox Name="tbxReplacLanguageElementDescription" 
                                     IsReadOnly="True"
                                     TextWrapping="Wrap"
                                     Grid.Row="2"
                                     Background="WhiteSmoke"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                    </Grid>
                </TabItem>
                <TabItem x:Name="RegOptionsTabItem" Header="Regex _Options" >
                    <ItemsControl Name="icRegexOptions">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding Selected}"
                                          Content="{Binding Name}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </TabItem>
                <TabItem x:Name="TextSourceTabItem" Header="Ot_her Options">
                    <DockPanel>
                        <GroupBox Header="Results" 
                                  DockPanel.Dock="Bottom">
                            <StackPanel Margin="5,5,5,0">
                                <CheckBox x:Name="ShowEmptiesMatchesCheckBox" 
                                          IsChecked="{Binding ShowEmptyMatches}"
                                          Content="Show _empties matches" />
                                <CheckBox x:Name="PrintFileNamesWhenExtractCheckBox" 
                                          IsChecked="{Binding PrintFileNameWhenExtract}"
                                          Content="Print Filenames when extract" />
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Text Source">
                            <GroupBox.Resources>
                                <Style TargetType="RadioButton">
                                    <Setter Property="Margin" Value="0,0,0,5" />
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Margin" Value="1,0,0,0" />
                                </Style>
                            </GroupBox.Resources>
                            <DockPanel>
                                <WrapPanel Margin="5" DockPanel.Dock="Top">
                                    <RadioButton x:Name="CurrentTabTextSourceRadioButton" 
                                         Margin="5,0"
                                         Content="Current _tab" 
                                         IsChecked="{Binding TextSourceOn, Converter={converters:EnumBooleanConverter}, ConverterParameter='CurrentTab'}" />
                                    <RadioButton x:Name="CurrentSelectedTextSourceRadioButton" 
                                         Margin="5,0"
                                         Content="Current se_lection"
                                         IsChecked="{Binding TextSourceOn, Converter={converters:EnumBooleanConverter}, ConverterParameter='CurrentSelection'}"/>
                                    <RadioButton x:Name="SpecifiedDirectoryTextSourceRadioButton" 
                                         Margin="5,0"
                                         Content="Specified _directory"
                                         IsChecked="{Binding TextSourceOn, Converter={converters:EnumBooleanConverter}, ConverterParameter='Directory'}"/>
                                    <RadioButton x:Name="CSharpScriptTextSourceRadioButton" 
                                         Margin="5,0"
                                         Content="C# _Script"
                                         IsChecked="{Binding TextSourceOn, Converter={converters:EnumBooleanConverter}, ConverterParameter='CSharpScript'}"/>
                                </WrapPanel>

                                <StackPanel Margin="5" 
                                            DockPanel.Dock="Top"
                                            Visibility="{Binding IsChecked, ElementName=SpecifiedDirectoryTextSourceRadioButton, Converter={converters:CustomBoolToVisibilityConverter}}">

                                    <DockPanel>
                                        <Button x:Name="SpecifiedDirectoryTextSourcePathButton"
                                        Content="..." 
                                        Padding="10,0" 
                                        DockPanel.Dock="Right"
                                        Click="SpecifiedDirectoryTextSourcePathButton_Click"/>
                                        <ComboBox x:Name="SpecifiedDirectoryTextSourcePathComboBox" 
                                          Text="{Binding TextSourceDirectoryPath, UpdateSourceTrigger=PropertyChanged}"
                                          ItemsSource="{Binding TextSourceDirectoryPathHistory}"
                                          IsEditable="True"/>
                                    </DockPanel>

                                    <Grid Margin="0,5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Label Content="_Filters"
                                           VerticalAlignment="Center"
                                           Padding="3,0"
                                           ToolTip="File Patterns supporting * and ? wildcards.Multi patterns separated by [,] char"/>
                                        <ComboBox x:Name="SpecifiedDirectoryTextSourceFilterComboBox"
                                              Text="{Binding TextSourceDirectorySearchFilter, UpdateSourceTrigger=PropertyChanged}"
                                              ItemsSource="{Binding TextSourceDirectorySearchFilterHistory}"
                                              Grid.Column="1"
                                              VerticalAlignment="Center"
                                              IsEditable="True"/>
                                    </Grid>

                                    <StackPanel Margin="5">
                                        <CheckBox x:Name="SearchSubDirectoriesCheckBox" 
                                          IsChecked="{Binding TextSourceDirectorySearchSubDirectories}"
                                          Content="Su_b directories" />
                                        <CheckBox x:Name="ShowNotMatchedFilesCheckBox" 
                                          IsChecked="{Binding TextSourceDirectoryShowNotMatchedFiles}"
                                          Content="Show _not matched files" />
                                        <CheckBox x:Name="OpenFilesForReplaceCheckBox" 
                                          IsChecked="{Binding OpenFilesForReplace}"
                                          Content="_Open files to replace in editor (otherwise modify the file on the disk)" />
                                    </StackPanel>
                                </StackPanel>

                                <DockPanel Visibility="{Binding IsChecked, ElementName=CSharpScriptTextSourceRadioButton, Converter={converters:CustomBoolToVisibilityConverter}}" >
                                    <WrapPanel DockPanel.Dock="Top">
                                        <WrapPanel.Resources>
                                            <Style BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button" />
                                            <Style BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" TargetType="ToggleButton" />
                                        </WrapPanel.Resources>
                                        <ToggleButton x:Name="ToggleShowLinesNumberInCSharpTextSourceButton" 
                                                      IsChecked="{Binding ShowLinesNumbersCSharpTextSourceEditorOption}">
                                            <StackPanel Orientation="Horizontal">
                                                <Image Source="{StaticResource ShowLinesNumbers}" Width="16" Height="16" ToolTip="Show/Hide lines numbers"/>
                                            </StackPanel>
                                        </ToggleButton>
                                        <ToggleButton x:Name="ToggleShowSpacesInCSharpTextSourceButton" 
                                                      IsChecked="{Binding ShowSpaceCharsCSharpTextSourceEditorOption}">
                                            <StackPanel Orientation="Horizontal">
                                                <Image Source="{StaticResource ShowSpaces}" Width="16" Height="16" ToolTip="Show/Hide spaces and tabulations" />
                                            </StackPanel>
                                        </ToggleButton>
                                        <ToggleButton x:Name="ToggleShowReturnsInCSharpTextSourceButton" 
                                                      IsChecked="{Binding ShowEndOfLinesCSharpTextSourceEditorOption}">
                                            <StackPanel Orientation="Horizontal">
                                                <Image Source="{StaticResource ShowReturns}" Width="16" Height="16" ToolTip="Show/Hide end of lines" />
                                            </StackPanel>
                                        </ToggleButton>
                                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                                        <Button x:Name="TestCSharpTextSourceButton"
                                                Click="TestCSharpTextSourceButton_Click">
                                            <Image Source="{StaticResource Play}" Width="16" Height="16" ToolTip="Test and Show Result" />
                                        </Button>
                                        <CheckBox Content="In a new tab"
                                                  VerticalAlignment="Center"
                                                  IsChecked="{Binding ShowCSharpTextSourceTestInANewTab}"/>
                                    </WrapPanel>
                                    <Border BorderBrush="Gray" 
                                            BorderThickness="1">
                                        <avalonEdit:TextEditor
                                            Name="TextSourceEditor"
                                            FontFamily="Consolas"
                                            FontSize="12"
                                            SyntaxHighlighting="C#"
                                            ShowLineNumbers="{Binding ShowLinesNumbersCSharpTextSourceEditorOption}"
                                            ScrollViewer.HorizontalScrollBarVisibility="Auto" >
                                            <avalonEdit:TextEditor.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Cut" Command="ApplicationCommands.Cut"/>
                                                    <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
                                                    <MenuItem Header="Paste" Command="ApplicationCommands.Paste"/>
                                                    <Separator />
                                                    <MenuItem Header="Select All" Command="ApplicationCommands.SelectAll"/>
                                                </ContextMenu>
                                            </avalonEdit:TextEditor.ContextMenu>
                                            <i:Interaction.Behaviors>
                                                <behaviors:SimplePropertyBindingBehavior PropertyName="Text" Value="{Binding CSharpTextSourceEditorText}" PropertyChangedTriggerEventName="TextChanged" />
                                                <behaviors:SimplePropertyBindingBehavior PropertyName="Options.ShowSpaces" Value="{Binding ShowSpaceCharsCSharpTextSourceEditorOption}" />
                                                <behaviors:SimplePropertyBindingBehavior PropertyName="Options.ShowTabs" Value="{Binding ShowSpaceCharsCSharpTextSourceEditorOption}" />
                                                <behaviors:SimplePropertyBindingBehavior PropertyName="Options.ShowEndOfLine" Value="{Binding ShowEndOfLinesCSharpTextSourceEditorOption}" />
                                            </i:Interaction.Behaviors>
                                        </avalonEdit:TextEditor>
                                    </Border>
                                </DockPanel>
                            </DockPanel>
                        </GroupBox>
                    </DockPanel>
                </TabItem>
            </TabControl>
        </Grid>
    </DockPanel>
</Window>
